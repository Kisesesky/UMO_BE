services:
  database:
    image: postgres:15
    container_name: umo_postgres
    restart: always
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: umo_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  nestjs-app:
    image: hoyau/umo_app:latest
    container_name: umo_app
    restart: always
    depends_on:
      database:
        condition: service_healthy
    ports:
      - "3000:3000"
    env_file:
      - .env
    command: sh -c "npm run migration:run && npm run start:prod"  #더이상 마이그레이션이 필요없을때
    # command: sh -c "npm run start:prod"

  nginx:
    image: nginx:latest
    container_name: umo_nginx
    ports:
      - "80:80"
      - "443:443" #HTTPS 필요시 추가
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/www:/var/www/certbot  # 이 줄 추가!
      - ./certbot/conf:/etc/letsencrypt  # HTTPS 적용 후 인증서 사용 시 필요
    depends_on:
      - nestjs-app

  certbot: #ssl인증서관련
    image: certbot/certbot
    container_name: umo_certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    entrypoint: /bin/sh -c "trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;"

volumes:
  postgres_data:
